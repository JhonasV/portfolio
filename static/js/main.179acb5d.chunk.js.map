{"version":3,"sources":["assets/img/avatar.jpg","components/SocialIcon/SocialIcon.js","components/SocialIcon/SocialIconList/index.js","components/layout/NavOptions.js","components/layout/Sidebar.js","components/layout/Layout.js","components/Project/ProjectCard/index.js","components/Project/ProjectCardList/index.js","containers/Projects.js","containers/About.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","SocialIcon","name","url","icon","className","target","rel","href","SocialIconList","Networks","map","key","id","NavOptions","options","option","show","to","pathname","Navbar","style","textAlign","width","height","borderRadius","src","Avatar","alt","Layout","children","ProjectCard","img","description","github","demo","ProjectCardList","Projects","project","i","About","App","path","exact","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.179acb5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.b2db69b4.jpg\";","import React from \"react\";\r\n\r\nconst SocialIcon = ({ name, url, icon }) => {\r\n  return (\r\n    <a\r\n      className=\"mr-2\"\r\n      name={name}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      href={url}\r\n    >\r\n      <h1 className=\"text-white\">\r\n        <i className={`fab ${icon}`}></i>\r\n      </h1>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default SocialIcon;\r\n","import React from \"react\";\r\nimport SocialIcon from \"../SocialIcon\";\r\nimport Networks from \"../../../assets/data/networks.json\";\r\n\r\nconst SocialIconList = () => {\r\n  const renderSocialIconList = () => {\r\n    return Networks.map((icon) => (\r\n      <SocialIcon\r\n        key={icon.id}\r\n        name={icon.name}\r\n        url={icon.url}\r\n        icon={icon.icon}\r\n      />\r\n    ));\r\n  };\r\n  return renderSocialIconList();\r\n};\r\n\r\nexport default SocialIconList;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport options from \"../../assets/data/navoptions.json\";\r\n\r\nconst NavOptions = () => (\r\n  <div>\r\n    {options.map((option) => {\r\n      if (option.show) {\r\n        return (\r\n          <NavLink\r\n            key={option.id}\r\n            to={option.pathname}\r\n            className=\"btn btn-secondary btn-block\"\r\n          >\r\n            {option.name}\r\n          </NavLink>\r\n        );\r\n      }\r\n    })}\r\n  </div>\r\n);\r\n\r\nexport default NavOptions;\r\n","import React from \"react\";\r\nimport SocialIconList from \"../SocialIcon/SocialIconList/\";\r\nimport Avatar from \"../../assets/img/avatar.jpg\";\r\nimport NavOptions from \"./NavOptions\";\r\n\r\nconst Navbar = () => (\r\n  <div>\r\n    <div className=\"row mt-2\">\r\n      <div\r\n        className=\"col-sm-12 col-md-12 col-lg-12\"\r\n        style={{ textAlign: \"center\" }}\r\n      >\r\n        <img\r\n          style={{ width: \"235px\", height: \"235px\", borderRadius: \"50%\" }}\r\n          src={Avatar}\r\n          alt=\"Jhonas Veras\"\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"col-sm-12 col-md-12 col-lg-12 mt-2\"\r\n        style={{ textAlign: \"center\" }}\r\n      >\r\n        <h3>Nelson J. Veras</h3>\r\n      </div>\r\n      <div\r\n        className=\"col-sm-12 col-md-12 col-lg-12 mt-2\"\r\n        style={{ textAlign: \"center\" }}\r\n      >\r\n        <h4>Software Developer</h4>\r\n      </div>\r\n    </div>\r\n    <div className=\"row mt-4\">\r\n      <div className=\"col\">\r\n        <NavOptions />\r\n        {/* <NavLink\r\n          activeClassName=\"active\"\r\n          to=\"/\"\r\n          className=\"btn btn-secondary btn-block\"\r\n        >\r\n          Projects\r\n        </NavLink>\r\n        <NavLink\r\n          activeClassName=\"active\"\r\n          to=\"/about\"\r\n          className=\"btn btn-secondary btn-block\"\r\n        >\r\n          About\r\n        </NavLink> */}\r\n      </div>\r\n    </div>\r\n    <div className=\"row mt-3 ml-1\">\r\n      <SocialIconList />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Navbar from \"./Sidebar\";\r\n\r\nconst Layout = ({ children }) => (\r\n  <div className=\"container \">\r\n    <main className=\"row w-100 ml-auto mr-auto mt-5 mb-3\">\r\n      <div className=\"col-sm-12 col-md-4 col-lg-4 p-3\">\r\n        <Navbar />\r\n      </div>\r\n      <div className=\"cold-sm-12 col-md-8 col-lg-8 p-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">{children}</div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  </div>\r\n);\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectCard = ({ name, description, img, github, demo, id }) => {\r\n  return (\r\n    <div className=\"card bg-dark\" style={{ height: \"400px\", width: \"100%\" }}>\r\n      <div className=\"card-header\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-8 pb-2\">\r\n            <h3 className=\"text-white font-weight-bold\">{name}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-body \">\r\n        <img src={img} className=\"w-100 h-100 ml-auto mr-auto\" alt={name} />\r\n      </div>\r\n      <div className=\"card-footer\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"text-white font-weight-bold\"\r\n              href={github}\r\n            >\r\n              <i className=\"fab fa-github\"></i> CODE\r\n            </a>\r\n          </div>\r\n          <div className=\"col\">\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"text-white font-weight-bold\"\r\n              href={demo}\r\n            >\r\n              <i className=\"fas fa-laptop\"></i> DEMO\r\n            </a>\r\n          </div>\r\n          <div className=\"col\">\r\n            <Link\r\n              className=\"text-white font-weight-bold\"\r\n              to={{\r\n                pathname: `project/${id}-${name}`\r\n              }}\r\n            >\r\n              <i className=\"fab fa-readme\"></i> INFO\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React, { useState } from \"react\";\r\nimport ProjectCard from \"../ProjectCard\";\r\nimport Projects from \"../../../assets/data/proyects.json\";\r\n\r\nconst ProjectCardList = () => {\r\n  const renderProjectCardList = () => {\r\n    return Projects.map((project, i) => (\r\n      <div key={project.id} className=\"col-sm-12 col-md-12 col-lg-6 mt-2\">\r\n        <ProjectCard\r\n          name={project.name}\r\n          img={project.img}\r\n          id={project.id}\r\n          github={project.github}\r\n          demo={project.demo}\r\n          description={project.description}\r\n        />\r\n      </div>\r\n    ));\r\n  };\r\n  return renderProjectCardList();\r\n};\r\n\r\nexport default ProjectCardList;\r\n","import React from \"react\";\r\nimport ProjectCardList from \"../components/Project/ProjectCardList/\";\r\nconst Projects = () => (\r\n  <div>\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <h3>Projects</h3>\r\n      </div>\r\n    </div>\r\n    <div className=\"row mt-2\">\r\n      <ProjectCardList />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nconst About = () => (\r\n  <div>\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <h3>About</h3>\r\n      </div>\r\n    </div>\r\n    <div className=\"row mt-2\">\r\n      <div className=\"col\">Working on this...</div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default About;\r\n","import React from \"react\";\nimport Layout from \"./layout/Layout\";\nimport Projects from \"../containers/Projects\";\nimport About from \"../containers/About\";\n\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <HashRouter>\n        <Layout>\n          <Switch>\n            <Route path=\"/\" exact component={Projects} />\n            <Route path=\"/about\" component={About} />\n            <Route\n              path=\"/project/:id\"\n              exact\n              render={() => <h1>Working on this...</h1>}\n            />\n          </Switch>\n        </Layout>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}